<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="KursovaGrinchakDataSet" targetNamespace="http://tempuri.org/KursovaGrinchakDataSet.xsd" xmlns:mstns="http://tempuri.org/KursovaGrinchakDataSet.xsd" xmlns="http://tempuri.org/KursovaGrinchakDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="KursovaGrinchakConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="KursovaGrinchakConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.БД_магазину.Properties.Settings.GlobalReference.Default.KursovaGrinchakConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="CheckTableAdapter" GeneratorDataComponentClassName="CheckTableAdapter" Name="Check" UserDataComponentName="CheckTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="KursovaGrinchakConnectionString (Settings)" DbObjectName="KursovaGrinchak.dbo.[Check]" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Check] WHERE (([CheckID] = @Original_CheckID) AND ([Date] = @Original_Date))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_CheckID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CheckID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Original_Date" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="Date" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Check] ([Date]) VALUES (@Date);
SELECT CheckID, Date FROM [Check] WHERE (CheckID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Date" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="Date" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT CheckID, Date FROM dbo.[Check]</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Check] SET [Date] = @Date WHERE (([CheckID] = @Original_CheckID) AND ([Date] = @Original_Date));
SELECT CheckID, Date FROM [Check] WHERE (CheckID = @CheckID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Date" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="Date" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_CheckID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CheckID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Original_Date" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="Date" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="CheckID" ColumnName="CheckID" DataSourceName="KursovaGrinchak.dbo.[Check]" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@CheckID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="CheckID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="CheckID" DataSetColumn="CheckID" />
              <Mapping SourceColumn="Date" DataSetColumn="Date" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="Product_groupsTableAdapter" GeneratorDataComponentClassName="Product_groupsTableAdapter" Name="Product_groups" UserDataComponentName="Product_groupsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="KursovaGrinchakConnectionString (Settings)" DbObjectName="KursovaGrinchak.dbo.Product_groups" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Product_groups] WHERE (([GroupID] = @Original_GroupID) AND ([GroupName] = @Original_GroupName))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_GroupID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="GroupID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_GroupName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="GroupName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Product_groups] ([GroupName]) VALUES (@GroupName);
SELECT GroupID, GroupName FROM Product_groups WHERE (GroupID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@GroupName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="GroupName" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT GroupID, GroupName FROM dbo.Product_groups</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Product_groups] SET [GroupName] = @GroupName WHERE (([GroupID] = @Original_GroupID) AND ([GroupName] = @Original_GroupName));
SELECT GroupID, GroupName FROM Product_groups WHERE (GroupID = @GroupID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@GroupName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="GroupName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_GroupID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="GroupID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_GroupName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="GroupName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="GroupID" ColumnName="GroupID" DataSourceName="KursovaGrinchak.dbo.Product_groups" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@GroupID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="GroupID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="GroupID" DataSetColumn="GroupID" />
              <Mapping SourceColumn="GroupName" DataSetColumn="GroupName" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ProductsTableAdapter" GeneratorDataComponentClassName="ProductsTableAdapter" Name="Products" UserDataComponentName="ProductsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="KursovaGrinchakConnectionString (Settings)" DbObjectName="KursovaGrinchak.dbo.Products" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Products] WHERE (([ProductID] = @Original_ProductID) AND ([GroupID] = @Original_GroupID) AND ([Name] = @Original_Name) AND ([Unit_of_measure] = @Original_Unit_of_measure) AND ([Purchase_price] = @Original_Purchase_price) AND ([Selling_price] = @Original_Selling_price))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ProductID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ProductID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_GroupID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="GroupID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Unit_of_measure" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Unit_of_measure" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Purchase_price" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Purchase_price" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Selling_price" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Selling_price" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Products] ([GroupID], [Name], [Unit_of_measure], [Purchase_price], [Selling_price]) VALUES (@GroupID, @Name, @Unit_of_measure, @Purchase_price, @Selling_price);
SELECT ProductID, GroupID, Name, Unit_of_measure, Purchase_price, Selling_price FROM Products WHERE (ProductID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@GroupID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="GroupID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Unit_of_measure" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Unit_of_measure" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Purchase_price" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Purchase_price" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Selling_price" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Selling_price" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT ProductID, GroupID, Name, Unit_of_measure, Purchase_price, Selling_price FROM dbo.Products</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Products] SET [GroupID] = @GroupID, [Name] = @Name, [Unit_of_measure] = @Unit_of_measure, [Purchase_price] = @Purchase_price, [Selling_price] = @Selling_price WHERE (([ProductID] = @Original_ProductID) AND ([GroupID] = @Original_GroupID) AND ([Name] = @Original_Name) AND ([Unit_of_measure] = @Original_Unit_of_measure) AND ([Purchase_price] = @Original_Purchase_price) AND ([Selling_price] = @Original_Selling_price));
SELECT ProductID, GroupID, Name, Unit_of_measure, Purchase_price, Selling_price FROM Products WHERE (ProductID = @ProductID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@GroupID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="GroupID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Unit_of_measure" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Unit_of_measure" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Purchase_price" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Purchase_price" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Selling_price" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Selling_price" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ProductID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ProductID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_GroupID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="GroupID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Unit_of_measure" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Unit_of_measure" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Purchase_price" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Purchase_price" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Selling_price" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Selling_price" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="ProductID" ColumnName="ProductID" DataSourceName="KursovaGrinchak.dbo.Products" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@ProductID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="ProductID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ProductID" DataSetColumn="ProductID" />
              <Mapping SourceColumn="GroupID" DataSetColumn="GroupID" />
              <Mapping SourceColumn="Name" DataSetColumn="Name" />
              <Mapping SourceColumn="Unit_of_measure" DataSetColumn="Unit_of_measure" />
              <Mapping SourceColumn="Purchase_price" DataSetColumn="Purchase_price" />
              <Mapping SourceColumn="Selling_price" DataSetColumn="Selling_price" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="StorageTableAdapter" GeneratorDataComponentClassName="StorageTableAdapter" Name="Storage" UserDataComponentName="StorageTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="KursovaGrinchakConnectionString (Settings)" DbObjectName="KursovaGrinchak.dbo.Storage" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Storage] WHERE (([Arrival_CodeID] = @Original_Arrival_CodeID) AND ([ProductID] = @Original_ProductID) AND ([Purchase_price] = @Original_Purchase_price) AND ([Selling_price] = @Original_Selling_price) AND ([Number of sales] = @Original_Number_of_sales))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Arrival_CodeID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Arrival_CodeID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ProductID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ProductID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Purchase_price" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Purchase_price" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Selling_price" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Selling_price" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Number_of_sales" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Number of sales" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Storage] ([ProductID], [Purchase_price], [Selling_price], [Number of sales]) VALUES (@ProductID, @Purchase_price, @Selling_price, @Number_of_sales);
SELECT Arrival_CodeID, ProductID, Purchase_price, Selling_price, [Number of sales] FROM Storage WHERE (Arrival_CodeID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ProductID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ProductID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Purchase_price" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Purchase_price" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Selling_price" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Selling_price" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Number_of_sales" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Number of sales" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Arrival_CodeID, ProductID, Purchase_price, Selling_price, [Number of sales] FROM dbo.Storage</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Storage] SET [ProductID] = @ProductID, [Purchase_price] = @Purchase_price, [Selling_price] = @Selling_price, [Number of sales] = @Number_of_sales WHERE (([Arrival_CodeID] = @Original_Arrival_CodeID) AND ([ProductID] = @Original_ProductID) AND ([Purchase_price] = @Original_Purchase_price) AND ([Selling_price] = @Original_Selling_price) AND ([Number of sales] = @Original_Number_of_sales));
SELECT Arrival_CodeID, ProductID, Purchase_price, Selling_price, [Number of sales] FROM Storage WHERE (Arrival_CodeID = @Arrival_CodeID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ProductID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ProductID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Purchase_price" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Purchase_price" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Selling_price" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Selling_price" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Number_of_sales" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Number of sales" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Arrival_CodeID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Arrival_CodeID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ProductID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ProductID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Purchase_price" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Purchase_price" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Selling_price" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Selling_price" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Number_of_sales" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Number of sales" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Arrival_CodeID" ColumnName="Arrival_CodeID" DataSourceName="KursovaGrinchak.dbo.Storage" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Arrival_CodeID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Arrival_CodeID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Arrival_CodeID" DataSetColumn="Arrival_CodeID" />
              <Mapping SourceColumn="ProductID" DataSetColumn="ProductID" />
              <Mapping SourceColumn="Purchase_price" DataSetColumn="Purchase_price" />
              <Mapping SourceColumn="Selling_price" DataSetColumn="Selling_price" />
              <Mapping SourceColumn="Number of sales" DataSetColumn="Number of sales" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="СonsumptionTableAdapter" GeneratorDataComponentClassName="СonsumptionTableAdapter" Name="Сonsumption" UserDataComponentName="СonsumptionTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="KursovaGrinchakConnectionString (Settings)" DbObjectName="KursovaGrinchak.dbo.Сonsumption" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Сonsumption] WHERE (([CheckID] = @Original_CheckID) AND ([ProductID] = @Original_ProductID) AND ([Count] = @Original_Count))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_CheckID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CheckID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ProductID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ProductID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Count" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Count" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Сonsumption] ([CheckID], [ProductID], [Count]) VALUES (@CheckID, @ProductID, @Count);
SELECT CheckID, ProductID, Count FROM Сonsumption WHERE (CheckID = @CheckID) AND (ProductID = @ProductID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@CheckID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CheckID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ProductID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ProductID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Count" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Count" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT CheckID, ProductID, Count FROM dbo.Сonsumption</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Сonsumption] SET [CheckID] = @CheckID, [ProductID] = @ProductID, [Count] = @Count WHERE (([CheckID] = @Original_CheckID) AND ([ProductID] = @Original_ProductID) AND ([Count] = @Original_Count));
SELECT CheckID, ProductID, Count FROM Сonsumption WHERE (CheckID = @CheckID) AND (ProductID = @ProductID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@CheckID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CheckID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ProductID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ProductID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Count" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Count" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_CheckID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CheckID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ProductID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ProductID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Count" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Count" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="CheckID" DataSetColumn="CheckID" />
              <Mapping SourceColumn="ProductID" DataSetColumn="ProductID" />
              <Mapping SourceColumn="Count" DataSetColumn="Count" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="KursovaGrinchakDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="KursovaGrinchakDataSet" msprop:Generator_UserDSName="KursovaGrinchakDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Check" msprop:Generator_TableClassName="CheckDataTable" msprop:Generator_TableVarName="tableCheck" msprop:Generator_TablePropName="Check" msprop:Generator_RowDeletingName="CheckRowDeleting" msprop:Generator_RowChangingName="CheckRowChanging" msprop:Generator_RowEvHandlerName="CheckRowChangeEventHandler" msprop:Generator_RowDeletedName="CheckRowDeleted" msprop:Generator_UserTableName="Check" msprop:Generator_RowChangedName="CheckRowChanged" msprop:Generator_RowEvArgName="CheckRowChangeEvent" msprop:Generator_RowClassName="CheckRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="CheckID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnCheckID" msprop:Generator_ColumnPropNameInRow="CheckID" msprop:Generator_ColumnPropNameInTable="CheckIDColumn" msprop:Generator_UserColumnName="CheckID" type="xs:int" />
              <xs:element name="Date" msprop:Generator_ColumnVarNameInTable="columnDate" msprop:Generator_ColumnPropNameInRow="Date" msprop:Generator_ColumnPropNameInTable="DateColumn" msprop:Generator_UserColumnName="Date" type="xs:dateTime" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Product_groups" msprop:Generator_TableClassName="Product_groupsDataTable" msprop:Generator_TableVarName="tableProduct_groups" msprop:Generator_TablePropName="Product_groups" msprop:Generator_RowDeletingName="Product_groupsRowDeleting" msprop:Generator_RowChangingName="Product_groupsRowChanging" msprop:Generator_RowEvHandlerName="Product_groupsRowChangeEventHandler" msprop:Generator_RowDeletedName="Product_groupsRowDeleted" msprop:Generator_UserTableName="Product_groups" msprop:Generator_RowChangedName="Product_groupsRowChanged" msprop:Generator_RowEvArgName="Product_groupsRowChangeEvent" msprop:Generator_RowClassName="Product_groupsRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="GroupID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnGroupID" msprop:Generator_ColumnPropNameInRow="GroupID" msprop:Generator_ColumnPropNameInTable="GroupIDColumn" msprop:Generator_UserColumnName="GroupID" type="xs:int" />
              <xs:element name="GroupName" msprop:Generator_ColumnVarNameInTable="columnGroupName" msprop:Generator_ColumnPropNameInRow="GroupName" msprop:Generator_ColumnPropNameInTable="GroupNameColumn" msprop:Generator_UserColumnName="GroupName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Products" msprop:Generator_TableClassName="ProductsDataTable" msprop:Generator_TableVarName="tableProducts" msprop:Generator_TablePropName="Products" msprop:Generator_RowDeletingName="ProductsRowDeleting" msprop:Generator_RowChangingName="ProductsRowChanging" msprop:Generator_RowEvHandlerName="ProductsRowChangeEventHandler" msprop:Generator_RowDeletedName="ProductsRowDeleted" msprop:Generator_UserTableName="Products" msprop:Generator_RowChangedName="ProductsRowChanged" msprop:Generator_RowEvArgName="ProductsRowChangeEvent" msprop:Generator_RowClassName="ProductsRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ProductID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnProductID" msprop:Generator_ColumnPropNameInRow="ProductID" msprop:Generator_ColumnPropNameInTable="ProductIDColumn" msprop:Generator_UserColumnName="ProductID" type="xs:int" />
              <xs:element name="GroupID" msprop:Generator_ColumnVarNameInTable="columnGroupID" msprop:Generator_ColumnPropNameInRow="GroupID" msprop:Generator_ColumnPropNameInTable="GroupIDColumn" msprop:Generator_UserColumnName="GroupID" type="xs:int" />
              <xs:element name="Name" msprop:Generator_ColumnVarNameInTable="columnName" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_ColumnPropNameInTable="NameColumn" msprop:Generator_UserColumnName="Name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Unit_of_measure" msprop:Generator_ColumnVarNameInTable="columnUnit_of_measure" msprop:Generator_ColumnPropNameInRow="Unit_of_measure" msprop:Generator_ColumnPropNameInTable="Unit_of_measureColumn" msprop:Generator_UserColumnName="Unit_of_measure">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Purchase_price" msprop:Generator_ColumnVarNameInTable="columnPurchase_price" msprop:Generator_ColumnPropNameInRow="Purchase_price" msprop:Generator_ColumnPropNameInTable="Purchase_priceColumn" msprop:Generator_UserColumnName="Purchase_price" type="xs:int" />
              <xs:element name="Selling_price" msprop:Generator_ColumnVarNameInTable="columnSelling_price" msprop:Generator_ColumnPropNameInRow="Selling_price" msprop:Generator_ColumnPropNameInTable="Selling_priceColumn" msprop:Generator_UserColumnName="Selling_price" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Storage" msprop:Generator_TableClassName="StorageDataTable" msprop:Generator_TableVarName="tableStorage" msprop:Generator_TablePropName="Storage" msprop:Generator_RowDeletingName="StorageRowDeleting" msprop:Generator_RowChangingName="StorageRowChanging" msprop:Generator_RowEvHandlerName="StorageRowChangeEventHandler" msprop:Generator_RowDeletedName="StorageRowDeleted" msprop:Generator_UserTableName="Storage" msprop:Generator_RowChangedName="StorageRowChanged" msprop:Generator_RowEvArgName="StorageRowChangeEvent" msprop:Generator_RowClassName="StorageRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Arrival_CodeID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnArrival_CodeID" msprop:Generator_ColumnPropNameInRow="Arrival_CodeID" msprop:Generator_ColumnPropNameInTable="Arrival_CodeIDColumn" msprop:Generator_UserColumnName="Arrival_CodeID" type="xs:int" />
              <xs:element name="ProductID" msprop:Generator_ColumnVarNameInTable="columnProductID" msprop:Generator_ColumnPropNameInRow="ProductID" msprop:Generator_ColumnPropNameInTable="ProductIDColumn" msprop:Generator_UserColumnName="ProductID" type="xs:int" />
              <xs:element name="Purchase_price" msprop:Generator_ColumnVarNameInTable="columnPurchase_price" msprop:Generator_ColumnPropNameInRow="Purchase_price" msprop:Generator_ColumnPropNameInTable="Purchase_priceColumn" msprop:Generator_UserColumnName="Purchase_price" type="xs:int" />
              <xs:element name="Selling_price" msprop:Generator_ColumnVarNameInTable="columnSelling_price" msprop:Generator_ColumnPropNameInRow="Selling_price" msprop:Generator_ColumnPropNameInTable="Selling_priceColumn" msprop:Generator_UserColumnName="Selling_price" type="xs:int" />
              <xs:element name="Number_x0020_of_x0020_sales" msprop:Generator_ColumnVarNameInTable="columnNumber_of_sales" msprop:Generator_ColumnPropNameInRow="Number_of_sales" msprop:Generator_ColumnPropNameInTable="Number_of_salesColumn" msprop:Generator_UserColumnName="Number of sales">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Сonsumption" msprop:Generator_TableClassName="СonsumptionDataTable" msprop:Generator_TableVarName="tableСonsumption" msprop:Generator_TablePropName="Сonsumption" msprop:Generator_RowDeletingName="СonsumptionRowDeleting" msprop:Generator_RowChangingName="СonsumptionRowChanging" msprop:Generator_RowEvHandlerName="СonsumptionRowChangeEventHandler" msprop:Generator_RowDeletedName="СonsumptionRowDeleted" msprop:Generator_UserTableName="Сonsumption" msprop:Generator_RowChangedName="СonsumptionRowChanged" msprop:Generator_RowEvArgName="СonsumptionRowChangeEvent" msprop:Generator_RowClassName="СonsumptionRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="CheckID" msprop:Generator_ColumnVarNameInTable="columnCheckID" msprop:Generator_ColumnPropNameInRow="CheckID" msprop:Generator_ColumnPropNameInTable="CheckIDColumn" msprop:Generator_UserColumnName="CheckID" type="xs:int" />
              <xs:element name="ProductID" msprop:Generator_ColumnVarNameInTable="columnProductID" msprop:Generator_ColumnPropNameInRow="ProductID" msprop:Generator_ColumnPropNameInTable="ProductIDColumn" msprop:Generator_UserColumnName="ProductID" type="xs:int" />
              <xs:element name="Count" msprop:Generator_ColumnVarNameInTable="columnCount" msprop:Generator_ColumnPropNameInRow="Count" msprop:Generator_ColumnPropNameInTable="CountColumn" msprop:Generator_UserColumnName="Count" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Check" />
      <xs:field xpath="mstns:CheckID" />
    </xs:unique>
    <xs:unique name="Product_groups_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Product_groups" />
      <xs:field xpath="mstns:GroupID" />
    </xs:unique>
    <xs:unique name="Products_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Products" />
      <xs:field xpath="mstns:ProductID" />
    </xs:unique>
    <xs:unique name="Storage_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Storage" />
      <xs:field xpath="mstns:Arrival_CodeID" />
    </xs:unique>
    <xs:unique name="Сonsumption_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Сonsumption" />
      <xs:field xpath="mstns:CheckID" />
      <xs:field xpath="mstns:ProductID" />
    </xs:unique>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="FK_Products_Product_groups" msdata:parent="Product_groups" msdata:child="Products" msdata:parentkey="GroupID" msdata:childkey="GroupID" msprop:Generator_UserChildTable="Products" msprop:Generator_ChildPropName="GetProductsRows" msprop:Generator_UserRelationName="FK_Products_Product_groups" msprop:Generator_ParentPropName="Product_groupsRow" msprop:Generator_RelationVarName="relationFK_Products_Product_groups" msprop:Generator_UserParentTable="Product_groups" />
      <msdata:Relationship name="FK_Storage_Products" msdata:parent="Products" msdata:child="Storage" msdata:parentkey="ProductID" msdata:childkey="ProductID" msprop:Generator_UserChildTable="Storage" msprop:Generator_ChildPropName="GetStorageRows" msprop:Generator_UserRelationName="FK_Storage_Products" msprop:Generator_ParentPropName="ProductsRow" msprop:Generator_RelationVarName="relationFK_Storage_Products" msprop:Generator_UserParentTable="Products" />
      <msdata:Relationship name="FK_Consumption_Products" msdata:parent="Products" msdata:child="Сonsumption" msdata:parentkey="ProductID" msdata:childkey="ProductID" msprop:Generator_UserChildTable="Сonsumption" msprop:Generator_ChildPropName="GetСonsumptionRows" msprop:Generator_UserRelationName="FK_Consumption_Products" msprop:Generator_ParentPropName="ProductsRow" msprop:Generator_RelationVarName="relationFK_Consumption_Products" msprop:Generator_UserParentTable="Products" />
      <msdata:Relationship name="FK_Сonsumption_Check" msdata:parent="Check" msdata:child="Сonsumption" msdata:parentkey="CheckID" msdata:childkey="CheckID" msprop:Generator_UserChildTable="Сonsumption" msprop:Generator_ChildPropName="GetСonsumptionRows" msprop:Generator_UserRelationName="FK_Сonsumption_Check" msprop:Generator_ParentPropName="CheckRow" msprop:Generator_RelationVarName="relationFK_Сonsumption_Check" msprop:Generator_UserParentTable="Check" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>